geom_point(data = hy.1[hy.1$predmatch == 1,], aes(x = abortion.no.federal.funds, y = predicted.Hyde.Logit,
col = factor(Hyde.Sean)))+
scale_color_manual(name = "Sponsor H.R. 771?",
breaks = c(0,1),
values = c("red","blue"),
labels = c("No","Yes"))+
xlab("Modeled District Support for Ban on Federal Abortion Funds")+
ylab("Predicted Probability of Endorsing Hyde Repeal")+
labs(title = "Hyde Repeal: Observed vs. Predicted by District Opinion")+
guides(text = FALSE)+
theme_bw()+
theme(text=element_text(size=12),
plot.title = element_text(face = "bold", size = 16))
gg.genderbump <- ggplot(hy.1[hy.1$is.man == 1 & hy.1$Repeal.Hyde == 0 & hy.1$predicted.Hyde.Logit < .55 & hy.1$predicted.Hyde.Logit.Women > .55,])+
geom_text(aes(x = abortion.no.federal.funds, y = preddiff,
col = factor(Hyde.Sean),
label = inclast))+
scale_color_manual(name = "Sponsor H.R. 771?",
breaks = c(0,1),
values = c("red","blue"),
labels = c("No","Yes"))+
xlab("Modeled District Support for Ban on Federal Abortion Funds")+
ylab("Predicted Probability of Endorsing Hyde Repeal")+
labs(title = "Hyde Repeal: Observed vs. Predicted by District Opinion")+
guides(text = FALSE)+
theme_bw()+
theme(text=element_text(size=12),
plot.title = element_text(face = "bold", size = 16))
# how many members in each class of prediction shift
pshift <- hy.1 %>% group_by(predshift) %>% count()
# plot more stuff
gg.hydecounts <- ggplot(pshift, aes(x = predshift, y = n))+
geom_bar(stat = "identity")+
scale_x_discrete(name = "Observed Likelihood of Endorsing Hyde Repeal vs. Likelihood if All Dems Female",
breaks = c(1,2,3,4,5,6),
labels = c("Very Likely - Very Likely", "Likely - Likely","Unlikely - Unlikely",
"Unlikely - Likely","Likely - Very Likely","Unlikely - Very Likely"))+
ylab("Count")+
labs(title = "Number of Members Whose Generic Female Replacement Would Be More Likely to Endorse Repealing Hyde ")+
theme_bw()+
theme(text=element_text(size=12),
plot.title = element_text(face = "bold", size = 16))
pclasses <- data.frame(cbind(rep(c("Likely","Unlikely","Very Likely"),2),
rep(c("obs","hyp.w"), each = 3)))
names(pclasses) <- c("class", "world")
pclasses$n[1:3] <- table(hy.1$predclass)
pclasses$n[4:6] <- table(hy.1$predclass.w)
gg.hydeclasscounts <- ggplot(pclasses, aes(x = class, y = n, fill = world))+
geom_bar(position = "dodge", stat = "identity")+
scale_x_discrete(name = "General Probability of Endorsing Hyde Repeal",
limits = c("Very Likely","Likely","Unlikely"))+
ylab("Count")+
scale_fill_manual(name = "",
breaks = c("hyp.w", "obs"),
values = c("blue","red"),
labels = c("All Dems Female","Observed"))+
ggtitle("Hyde Repeal: Observed vs. Generic Female Replacement")+
theme_bw()+
theme(text=element_text(size=12),
plot.title = element_text(face = "bold", size = 16))
write.csv(hy.1, file="hyde.csv")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("car")
View(hyde_output)
# define difference in predictions between baseline and all-female models
hy.1$preddiff <- with(hyde_output, predicted.Hyde.Logit.Women - predicted.Hyde.Logit)
# define difference in predictions between baseline and all-female models
hyde_output$preddiff <- with(hyde_output, predicted.Hyde.Logit.Women - predicted.Hyde.Logit)
# define which members' behavior matches the baseline model's predictions
hyde_output$predmatch <- with(hyde_output, ifelse(Hyde.Sean == 0 & predicted.Hyde.Logit < .5, 1,
ifelse(Hyde.Sean == 1 & predicted.Hyde.Logit > .5, 1, 0)))
# read in data, define some relevant variables
hy <-read.csv("~/Desktop/JD.Part.1_House.csv", stringsAsFactors = FALSE)
hy$vapWshare <- with(hy, vapWhite / vap)
hy$vapBshare <- with(hy, vapBlack / vap)
hy$vapLshare <- with(hy, vapLatino / vap)
hy$vapAshare <- with(hy, vapAAPI / vap)
hy$is.man = ifelse(hy$gender=="Man",1,0)
# construct counterfactual dataset where there aren't any men
hy.1<- hy
hy.2<- hy
hy.2$is.man = 0
# model support for Hyde repeal
hydemod <-  glm(Hyde.Sean ~ PVI_Numeric + is.man +
vapWshare + acs16ba + medinc + abortion.no.federal.funds,
data = hy, family="binomial")
summary(hydemod)
# alternate version with partisan lean instead of PVI for district politics
hydemod.pl <-  glm(Hyde.Sean ~ Partisan.Lean + is.man +
vapWshare + acs16ba + medinc + abortion.no.federal.funds,
data = hy, family="binomial")
summary(hydemod.pl)
# alternate version with alternate spec for partisan lean
hydemod.pl1 <-  glm(Hyde.Sean ~ Partisan.Lean.1 + is.man +
vapWshare + acs16ba + medinc + abortion.no.federal.funds,
data = hy, family="binomial")
summary(hydemod.pl1)
# set prediction matrix using first version of partisan lean
# iterate gender, everything else at means
pmat <- data.frame(Partisan.Lean = mean(hy.1$Partisan.Lean),
is.man = c(0,1),
vapWshare = mean(hy.1$vapWshare),
acs16ba = mean(hy.1$acs16ba),
medinc = mean(hy.1$medinc),
abortion.no.federal.funds = mean(hy.1$abortion.no.federal.funds))
# predict new values, append estimate and 95% bounds to prediction matrix
constpred <- predict(hydemod.pl, newdata = pmat, type = "response", se=TRUE)
pmat$pred <- constpred$fit
pmat$lwr <- constpred$fit - 1.96*constpred$se.fit
pmat$upr <- constpred$fit + 1.96*constpred$se.fit
# leave one out predictions
#for each member
for(i in 1:nrow(hy.1)){
# model hyde support *with that memeber removed from dataset*
modts <- glm(Hyde.Sean ~ Partisan.Lean + is.man +
vapWshare + acs16ba + medinc + abortion.no.federal.funds,
data = hy.1[-i,], family="binomial")
modsumts <- summary(modts)
# predict probability of supporting Hyde repeal for that member's generic replacement
basepred <- predict(modts,  type = "response", newdata = hy.1[i,], se = TRUE)
# predict probability of supporting Hyde repeal for that member's generic female replacement
fempred <- predict(modts,  type = "response", newdata = hy.2[i,], se = TRUE)
# append prediction and standard error for both to main dataset
hy.1$predicted.Hyde.Logit[i] <- basepred$fit
hy.1$predicted.Hyde.Logit.se[i] <- basepred$se.fit
hy.1$predicted.Hyde.Logit.Women[i] <- fempred$fit
hy.1$predicted.Hyde.Logit.Women.se[i] <- fempred$se.fit
}
# define confidence intervals for baseline and all-female predictions
hy.1$hyde.lwr <- with(hy.1, predicted.Hyde.Logit - 1.96*predicted.Hyde.Logit.se)
hy.1$hyde.upr <- with(hy.1, predicted.Hyde.Logit + 1.96*predicted.Hyde.Logit.se)
hy.1$hyde.lwr.w <- with(hy.1, predicted.Hyde.Logit.Women - 1.96*predicted.Hyde.Logit.Women.se)
hy.1$hyde.upr.w <- with(hy.1, predicted.Hyde.Logit.Women + 1.96*predicted.Hyde.Logit.Women.se)
# define prediction classes
hy.1$predclass <- with(hy.1, ifelse(hyde.lwr > .5, "Very Likely",
ifelse(hyde.lwr <= .5 & predicted.Hyde.Logit > .5, "Likely", "Unlikely")))
hy.1$predclass.w <- with(hy.1, ifelse(hyde.lwr.w > .5, "Very Likely",
ifelse(hyde.lwr.w <= .5 & predicted.Hyde.Logit.Women > .5, "Likely", "Unlikely")))
# identify which members' generic replacement behavior would differ by gender
hy.1$predshift <- as.factor(with(hy.1, ifelse(predclass == "Very Likely" & predclass.w == "Very Likely", 1,
ifelse(predclass == "Likely" & predclass.w == "Likely", 2,
ifelse(predclass == "Unlikely" & predclass.w == "Unlikely", 3,
ifelse(predclass == "Unlikely" & predclass.w == "Likely", 4,
ifelse(predclass == "Likely" & predclass.w == "Very Likely", 5,
ifelse(predclass == "Unlikely" & predclass.w == "Very Likely", 6, NA))))))))
# define difference in predictions between baseline and all-female models
hy.1$preddiff <- with(hy.1, predicted.Hyde.Logit.Women - predicted.Hyde.Logit)
# define which members' behavior matches the baseline model's predictions
hy.1$predmatch <- with(hy.1, ifelse(Hyde.Sean == 0 & predicted.Hyde.Logit < .5, 1,
ifelse(Hyde.Sean == 1 & predicted.Hyde.Logit > .5, 1, 0)))
# identify female members who support Hyde and male members who oppose it
femno <- hy.1$inclast[hy.1$is.man == 0 & hy.1$Repeal.Hyde == 0 & hy.1$predicted.Hyde.Logit > .55]
manyes <- hy.1$inclast[hy.1$is.man == 1 & hy.1$Repeal.Hyde == 1 & hy.1$predicted.Hyde.Logit < .55]
# identify male members whose don't support hyde repeal and whose male replacements wouldn't but whose female replacements would
mfchange <- hy.1$inclast[hy.1$is.man == 1 & hy.1$Repeal.Hyde == 0 & hy.1$predicted.Hyde.Logit < .55 & hy.1$predicted.Hyde.Logit.Women > .55]
# plot stuff
gg.basepred <- ggplot()+
geom_text(data = hy.1[hy.1$predmatch == 0,], aes(x = abortion.no.federal.funds, y = predicted.Hyde.Logit,
col = factor(Hyde.Sean),
label = inclast))+
geom_point(data = hy.1[hy.1$predmatch == 1,], aes(x = abortion.no.federal.funds, y = predicted.Hyde.Logit,
col = factor(Hyde.Sean)))+
scale_color_manual(name = "Sponsor H.R. 771?",
breaks = c(0,1),
values = c("red","blue"),
labels = c("No","Yes"))+
xlab("Modeled District Support for Ban on Federal Abortion Funds")+
ylab("Predicted Probability of Endorsing Hyde Repeal")+
labs(title = "Hyde Repeal: Observed vs. Predicted by District Opinion")+
guides(text = FALSE)+
theme_bw()+
theme(text=element_text(size=12),
plot.title = element_text(face = "bold", size = 16))
gg.genderbump <- ggplot(hy.1[hy.1$is.man == 1 & hy.1$Repeal.Hyde == 0 & hy.1$predicted.Hyde.Logit < .55 & hy.1$predicted.Hyde.Logit.Women > .55,])+
geom_text(aes(x = abortion.no.federal.funds, y = preddiff,
col = factor(Hyde.Sean),
label = inclast))+
scale_color_manual(name = "Sponsor H.R. 771?",
breaks = c(0,1),
values = c("red","blue"),
labels = c("No","Yes"))+
xlab("Modeled District Support for Ban on Federal Abortion Funds")+
ylab("Predicted Probability of Endorsing Hyde Repeal")+
labs(title = "Hyde Repeal: Observed vs. Predicted by District Opinion")+
guides(text = FALSE)+
theme_bw()+
theme(text=element_text(size=12),
plot.title = element_text(face = "bold", size = 16))
# how many members in each class of prediction shift
pshift <- hy.1 %>% group_by(predshift) %>% count()
# plot more stuff
gg.hydecounts <- ggplot(pshift, aes(x = predshift, y = n))+
geom_bar(stat = "identity")+
scale_x_discrete(name = "Observed Likelihood of Endorsing Hyde Repeal vs. Likelihood if All Dems Female",
breaks = c(1,2,3,4,5,6),
labels = c("Very Likely - Very Likely", "Likely - Likely","Unlikely - Unlikely",
"Unlikely - Likely","Likely - Very Likely","Unlikely - Very Likely"))+
ylab("Count")+
labs(title = "Number of Members Whose Generic Female Replacement Would Be More Likely to Endorse Repealing Hyde ")+
theme_bw()+
theme(text=element_text(size=12),
plot.title = element_text(face = "bold", size = 16))
pclasses <- data.frame(cbind(rep(c("Likely","Unlikely","Very Likely"),2),
rep(c("obs","hyp.w"), each = 3)))
names(pclasses) <- c("class", "world")
pclasses$n[1:3] <- table(hy.1$predclass)
pclasses$n[4:6] <- table(hy.1$predclass.w)
gg.hydeclasscounts <- ggplot(pclasses, aes(x = class, y = n, fill = world))+
geom_bar(position = "dodge", stat = "identity")+
scale_x_discrete(name = "General Probability of Endorsing Hyde Repeal",
limits = c("Very Likely","Likely","Unlikely"))+
ylab("Count")+
scale_fill_manual(name = "",
breaks = c("hyp.w", "obs"),
values = c("blue","red"),
labels = c("All Dems Female","Observed"))+
ggtitle("Hyde Repeal: Observed vs. Generic Female Replacement")+
theme_bw()+
theme(text=element_text(size=12),
plot.title = element_text(face = "bold", size = 16))
write.csv(hy.1, file="hyde.csv")
View(gg.basepred)
View(gg.genderbump)
View(gg.hydeclasscounts)
View(gg.hydecounts)
View(hy.1)
View(hydemod.pl)
View(hy.1)
waffle(pred.class)
waffle(c(pred.class))
waffle(c(predclass))
count(predclass)
View(hy.1)
women <- c(hy.1, predclass.w)
count(predclass.w)
count(hy.1, vars = "predclass")
count(hy.1, vars = "predclass.w", "likely")
count(hy.1, vars = "predclass.w", "unlikely")
factor(hy.1$predclass.w)
w <- factor(hy.1$predclass.w)
table(w)
iron(
waffle(c("very likely" = 110, "likely" = 38, "unlkely" = 45)
waffle(c)
iron(
+ waffle(c("very likely" = 110, "likely" = 38, "unlkely" = 45, title "generic model")
iron(
+ waffle(c("very likely" = 110, "likely" = 38, "unlkely" = 45), title = "generic model")
waffle(c("very likely" = 142, "likely" = 42, "unlikely" = 9), title = "women only model"))
iron(
iron(
+ waffle(c("very likely" = 110, "likely" = 38, "unlkely" = 45)
))
end
iron(
+ waffle(c("very likely" = 110, "likely" = 38, "unlkely" = 45), title = "generic model"),
waffle(c("very likely" = 142, "likely" = 42, "unlkely" = 9))
iron(
iron(
Model_1, title = "M"),
iron(
waffle(Model_1),
waffle(Model_2))
Model_2 <- (c("very likely" = 142, "likely" = 42, "unlikely" = 9))
iron(
waffle(Model_1, title = "G"),
waffle(Model_2))
iron(
+ waffle(Model_1, title = "generic model"),
+ waffle(Model_2, title = "women only model"))
iron(
+ waffle(Model_1, title = "G"),
+ waffle(Model_2))
iron(
waffle(Model_1),
waffle(Model_2))
iron(
+ waffle(Model_1, title = "generic model"),
+ waffle(Model_2, title = "women only model"))
iron(
+ waffle(Model_1, title = "generic model"),
+ waffle(Model_2, title = "women only model"))
iron(
+ waffle(Model_1, Title = "G"),
+ waffle(Model_2))
iron(
+ waffle(Model_1, title = "G"),
+ waffle(Model_2))
table(Model_1)
iron(
waffle(c(12, 14, 15, title = "X"), )
waffle(c(14, 13, 15, title = "C"))
iron(
+ waffle(c(12, 14, 15, title = "X"),
+ waffle(c(14, 13, 15, title = "C"))
iron(
+ waffle(c(12, 14, 15, title = "X"),
+ waffle(c(14, 13, 15, title = "C")))
iron(
+ waffle(c(12, 14, 15), title = "X")
+ waffle(c(14, 13, 15), title = "C"))
waffle(Model_1)
iron(
waffle(Model_1),
waffle(Model_2))
iron()
iron(
waffle(Model_1, title = "Generic Model"),
waffle(Model_2, title = "Women Only Model"))
install.packages("rtweet")
mc_flw <- get_followers("sidney_b", n = 5000)
library("rtweet", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
mc_flw <- get_followers("sidney_b", n = 5000)
if (!requireNamespace("devtools", quietly = TRUE)) {
install.packages("devtools")
}
## install dev version of rtweet from github
devtools::install_github("mkearney/rtweet")
## load rtweet package
library(rtweet)
mc <- get_followers("sidney_b", n = 5000)
rt <- search_tweets(
"#rstats", n = 18000, include_rts = FALSE
)
setwd("~/Documents/GitHub/MoC-Instagram")
install.packages(yaml)
install.packages("yaml")
install.packages("yaml")
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml")
for(soc in social) {
s <- sprintf("%s: %s", soc$id$bioguide, soc$social$instagram)
print(s)
}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml")
for(soc in social) {
s <- sprintf("%s: %s", soc$id$bioguide, soc$social$instagram)
print(s)
}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml")
social <- yaml.load_file("legislators-social-media.yaml.txt")
for(soc in social) {
s <- sprintf("%s: %s", soc$id$bioguide, soc$social$instagram)
print(s)
}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
for(soc in social) {
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", soc$id$bioguide, soc$social$instagram)
print(s)
} else {
print(soc$id$bioguide)
}
}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
}
}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
}
}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
}
}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
}}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
}}}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
}}
library('yaml')
social <- yaml.load_file("legislators-social-media.yaml.txt")
bio <- yaml.load_file("legislators-current.yaml.txt")
for(soc in social) {
name = ""
for(b in bio) {
if(b$id$bioguide == soc$id$bioguide) {
name = b$name$official_full
break
}
}
if(length(soc$social$instagram) > 0) {
s <- sprintf("%s: %s", name, soc$social$instagram)
print(s)
} else {
print(name)
}}
